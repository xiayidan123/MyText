//
//  NewRegisterVC.m
//  dev01
//
//  Created by Huan on 15/3/16.
//  Copyright (c) 2015年 wowtech. All rights reserved.
//

#import "NewRegisterVC.h"
#import "leftBarBtn.h"
#import "QCheckBox.h"
#import "OMAlertView.h"
#import "WowTalkWebServerIF.h"
#import "WTError.h"
#import "AppDelegate.h"
#define TAG_ALERT_REGISTER_SUCCESS 100
#define TAG_ALERT_REGISTER_FAIL 101
@interface NewRegisterVC ()<UIGestureRecognizerDelegate,UIActionSheetDelegate,UITextFieldDelegate>
@property (assign ,nonatomic) int userType;
@property (retain ,nonatomic) OMAlertView *omAlertView;
@property (assign ,nonatomic) BOOL isStudent;
@property (retain, nonatomic) IBOutlet UITextField *RegPassword_TX;
@property (retain, nonatomic) IBOutlet UIButton *Register_Btn;
- (IBAction)sendNewAccountAndPassword:(id)sender;
@property (retain, nonatomic) IBOutlet UIImageView *Account_imgV;
@property (retain, nonatomic) IBOutlet UILabel *AccountType_Lab;
@property (retain, nonatomic) IBOutlet UITextField *RegPassAgain_TX;
@end

@implementation NewRegisterVC

- (void)dealloc {
    [_RegPassword_TX release];
    [_Register_Btn release];
    [_Account_imgV release];
    [_AccountType_Lab release];
    [_RegPassAgain_TX release];
    self.telephoneNum = nil;
    [super dealloc];
}

- (void)viewWillAppear:(BOOL)animated
{
    [[UIApplication sharedApplication] setStatusBarHidden:NO withAnimation:UIStatusBarAnimationNone];
}
- (void)viewDidLoad {
    [super viewDidLoad];

    _isStudent = YES;
    self.view.backgroundColor = [UIColor colorWithRed:0.94f green:0.94f blue:0.96f alpha:1.00f];
    
    self.title = NSLocalizedString(@"注册", nil);
    
    
    [self uiConfig];
}
- (void)uiConfig
{
    QCheckBox *_check = [[QCheckBox alloc] initWithDelegate:self];
    _check.frame = CGRectMake(10, 175, 80, 60);
    [_check setTitle:@"显示密码" forState:UIControlStateNormal];
    [_check setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
    [_check.titleLabel setFont:[UIFont boldSystemFontOfSize:15.0f]];
    [_check setImage:[UIImage imageNamed:@"btn_show_password_off"] forState:UIControlStateNormal];
    [_check setImage:[UIImage imageNamed:@"btn_show_password_on"] forState:UIControlStateSelected];
    [self.view addSubview:_check];
    [_check setChecked:NO];
    
    [_Register_Btn setBackgroundColor:[UIColor colorWithRed:0.10f green:0.64f blue:0.89f alpha:1.00f]];
    [_Register_Btn.layer setMasksToBounds:YES];
    [_Register_Btn.layer setCornerRadius:5.0];
    
    
    self.Account_imgV.userInteractionEnabled = YES;
    UITapGestureRecognizer *singleFingerOne = [[UITapGestureRecognizer alloc] initWithTarget:self
                                                                                      action:@selector(handleSingleFingerEvent)];
    singleFingerOne.numberOfTouchesRequired = 1; //手指数
    singleFingerOne.numberOfTapsRequired = 1; //tap次数
    singleFingerOne.delegate= self;
    [self.Account_imgV addGestureRecognizer:singleFingerOne];
    
    
    
}
- (void)handleSingleFingerEvent
{
    [self CustomresignFirstResponder];
    UIActionSheet * actionSheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:nil otherButtonTitles:@"老师", @"学生",nil];
    [actionSheet showInView:self.view];
}
#pragma mark UIActionSheetDelegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex == 0) {
        self.userType = 2;
        _AccountType_Lab.textColor = [UIColor blackColor];
        _AccountType_Lab.text = @"老师";
        _isStudent = NO;
        
        /*提示老师注册后台*/
        UIAlertView *alter = [[UIAlertView alloc] initWithTitle:@"老师，您好！" message:@"请注册家校后台更好管理班级和学生！\n请联系一米智联: 400-670-3306" delegate:nil cancelButtonTitle:NSLocalizedString(@"OK",nil) otherButtonTitles:nil];
        [alter show];
        [alter release];

    }
    else if (buttonIndex == 1)
    {
        self.userType = 1;
        _AccountType_Lab.textColor = [UIColor blackColor];
        _AccountType_Lab.text = @"学生";
        _isStudent = YES;
    }
    else if (buttonIndex == 2)
    {
//        _AccountType_Lab.text = @"帐号类型（不可更改）";
    }
}
#pragma mark UITextFieldDelegate
- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event {
    [self CustomresignFirstResponder];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    //回收键盘,取消第一响应者
    [self CustomresignFirstResponder];
    return YES;
    
}
- (void)CustomresignFirstResponder
{
    [_RegPassword_TX resignFirstResponder];
    [_RegPassAgain_TX resignFirstResponder];
}
- (void)backAction
{
    [self.navigationController setNavigationBarHidden:YES animated:YES];
    [self.navigationController popViewControllerAnimated:YES];
}
- (void)cancelAction
{
    [self.navigationController setNavigationBarHidden:YES animated:YES];
    [self.navigationController popViewControllerAnimated:YES];
}



- (IBAction)sendNewAccountAndPassword:(id)sender {
    // 账号不能为空,可以使用2-20个字母、数字、下划线和减号
    BOOL rlt=YES;
    NSString* errMsg=@"";
    if (_RegPassword_TX.text == nil || _RegPassword_TX.text.length == 0){
        rlt = NO;
        errMsg = NSLocalizedString(@"密码不能为空,可以使用6-20个字母、数字、下划线和减号",nil);
    }
    else if (_RegPassword_TX.text.length < 6){
        rlt = NO;
        errMsg = NSLocalizedString(@"密码最少6位,可以使用6-20个字母、数字、下划线和减号",nil);
    }
    else  if (_RegPassAgain_TX.text == nil || ![_RegPassword_TX.text isEqualToString:_RegPassAgain_TX.text]){
        rlt = NO;
        errMsg = NSLocalizedString(@"Two passwords are different",nil);
    }else if (_RegPassword_TX.text.length > 20){
        rlt = NO;
        errMsg = NSLocalizedString(@"密码最多20位,可以使用6-20个字母、数字、下划线和减号",nil);
    }else if (![self isValidatePassWord:_RegPassword_TX.text]){
        rlt = NO;
        errMsg = NSLocalizedString(@"密码格式不正确，可以使用6-20个字母，数字，下划线和减号",nil);
    }else if (![self.AccountType_Lab.text isEqualToString:NSLocalizedString(@"老师",nil)] && ![self.AccountType_Lab.text isEqualToString:NSLocalizedString(@"学生",nil)]){
        rlt = NO;
        errMsg = NSLocalizedString(@"请选择账号类型",nil);
    }
    if(rlt==NO){
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:NSLocalizedString(@"Failed to register",nil) message:errMsg delegate:self cancelButtonTitle:NSLocalizedString(@"OK", nil) otherButtonTitles:nil, nil];
        alert.tag = TAG_ALERT_REGISTER_FAIL;
        [alert show];
        [alert release];
        return;
    }
    
    UIView *customView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width/2.5,60)];
    UIActivityIndicatorView *activeView = [[UIActivityIndicatorView alloc]initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge|UIActivityIndicatorViewStyleGray];
    activeView.tag = 5000;
    //    activeView.transform = CGAffineTransformMakeScale(1, 1);
    activeView.center = CGPointMake(customView.frame.size.width/4, customView.frame.size.height/2);
    [customView addSubview:activeView];
    [activeView release];
    [activeView startAnimating];
    
    UILabel *textLabel = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, customView.frame.size.width/2, customView.frame.size.height)];
    textLabel.textAlignment = NSTextAlignmentLeft;
    textLabel.textColor = [UIColor grayColor];
    textLabel.text = NSLocalizedString(@"正在注册...",nil);
    textLabel.font = [UIFont systemFontOfSize:12];
    textLabel.tag = 5001;
    textLabel.center = CGPointMake(activeView.frame.origin.x + activeView.frame.size.width + textLabel.frame.size.width/2, customView.frame.size.height/2);
    [customView addSubview:textLabel];
    [textLabel release];
    
    _omAlertView = [[OMAlertView alloc]initWithCustomView:customView delegate:nil cancelButtonTitle:nil enterButtonTitle:nil TitleArray:nil];
    [_omAlertView show];
    [_omAlertView release];
    [customView release];
    
    [WowTalkWebServerIF registerWithUserid:self.telephoneNum password:_RegPassword_TX.text withUserType:(_isStudent?@"1":@"2") withCallback:@selector(fRegisterFinished:) withObserver:self];
}
- (void)fRegisterFinished:(NSNotification *)notification
{
    if(notification==nil) return;
    
    UIView *customView = _omAlertView.custiomView;
    UILabel *textLabel = (UILabel *)[customView viewWithTag:5001];
    textLabel.text = NSLocalizedString(@"正在登录...",nil);
    
    NSDictionary *dict = [notification userInfo];
    
    if (dict==nil) return;
    
    if ([dict objectForKey:WT_ERROR] && [[dict objectForKey:WT_ERROR] code] != NO_ERROR && [[dict objectForKey:WT_ERROR] code] != NETWORK_IS_NOT_AVAILABLE)
    {
        NSString* alertMsg =[NSString stringWithFormat:@"error%ld", (long)[[dict objectForKey:WT_ERROR] code]];
        alertMsg  = NSLocalizedString(alertMsg, nil);
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:NSLocalizedString(@"Failed to register",nil) message:alertMsg delegate:self cancelButtonTitle:NSLocalizedString(@"OK", nil) otherButtonTitles:nil, nil];
        alert.tag = TAG_ALERT_REGISTER_FAIL;
        
        [alert show];
        [alert release];
    }
    else
    {
        [WowTalkWebServerIF loginWithUserinfo:self.telephoneNum password:_RegPassword_TX.text withLatitude:0 withLongti:0 withCallback:@selector(fLoginFinished:) withObserver:self];
    }
    [_omAlertView dismissWithClickedButtonIndex:0 animated:NO];
}

- (void)fLoginFinished:(NSNotification *)notification
{
//    [_omAlertView dismissWithClickedButtonIndex:0 animated:NO];
    NSDictionary *dict = [notification userInfo];
    if ([dict objectForKey:WT_ERROR] && [[dict objectForKey:WT_ERROR] code] != NO_ERROR)
    {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:NSLocalizedString(@"Failed to login",nil) message:NSLocalizedString(@"Authetication failed",nil) delegate:self cancelButtonTitle:NSLocalizedString(@"OK", nil) otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
    }
    else
    {
        [[AppDelegate sharedAppDelegate] setupApplicaiton:YES];
    }
}
-(BOOL) isValidatePassWord:(NSString *)passWord
{
    NSString *passWordRegex = @"^[-_a-zA-Z0-9]+$";
    NSPredicate *passWordTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@",passWordRegex];
    return [passWordTest evaluateWithObject:passWord];
}
#pragma mark - QCheckBoxDelegate

- (void)didSelectedCheckBox:(QCheckBox *)checkbox checked:(BOOL)checked {
    if (checked) {
        _RegPassword_TX.secureTextEntry = NO;
        _RegPassAgain_TX.secureTextEntry = NO;
        
    }
    else
    {
        _RegPassword_TX.secureTextEntry = YES;
        _RegPassAgain_TX.secureTextEntry = YES;
        
    }
}
@end
